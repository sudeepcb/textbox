name: $(date:yyyyMMdd)$(rev:.rr)

stages:
  - stage: 'build'
    condition: succeeded()
    displayName: 'build-mvc'
    jobs:
      - job:
        condition: succeeded()
        displayName: 'build-process'
        pool:
          vmImage: 'ubuntu-16.04'
        steps: 
          - script: |
              dotnet build 
  - stage: 'test'
    condition: succeeded()
    displayName: 'test-mvc'
    jobs:
      - job:
        condition: succeeded()
        displayName: 'test-process'
        pool:
          vmImage: 'ubuntu-16.04'
        steps:
          - script: |
              dotnet tool install --global dotnet-sonarscanner
              dotnet sonarscanner begin /k:"devopsdemo2019" /o:"fredbelotte-github" /d:sonar.login="5525c02dac30659cb0710672f763f1be743c7afe" /d:sonar.host.url="https://sonarcloud.io/"
              dotnet build
              dotnet test --logger trx /p:CollectCoverage=true /p:CoverletOutput=TestResults/ /p:CoverletOutputFormat=\"cobertura,opencover\" /p:Exclude=[xunit*]*
              dotnet sonarscanner end /d:sonar.login="5525c02dac30659cb0710672f763f1be743c7afe"
          - task: PublishTestResults@2
            displayName: 'publish result::unit-test'
            inputs:
              testRunner: VSTest
              testResultsFiles: '**/*.trx'
          - task: PublishCodeCoverageResults@1
            displayName: 'publish result::code-coverage'
            inputs:
              codeCoverageTool: cobertura
              summaryFileLocation: '**/coverage.cobertura.xml'
  
  - stage: 'pack'
    condition: succeeded()
    dependsOn:
      - test
    displayName: 'pack-mvc'
    jobs:
      - job:
        condition: succeeded()
        displayName: 'pack-process'
        pool:
          vmImage: 'ubuntu-16.04'
        steps:
          - task: Docker@2
            inputs:
              command: 'login'
              containerRegistry: 'docker'
            displayName: 'docker login'
          - script: |
              docker image build --file Dockerfile --tag devopsdemo .
              docker image tag devopsdemo fredbelotte/devopsdemo
              docker push fredbelotte/devopsdemo
          - task: Docker@2
            inputs:
              command: 'logout'
              containerRegistry: 'docker'
            displayName: 'docker login'
  
  - stage: 'deploy'
    condition: succeeded('pack')
    dependsOn:
      - test
      - pack
    displayName: 'deploy-mvc'
    jobs:
      - job:
        condition: succeeded()
        displayName: 'deploy-process'
        pool:
          vmImage: 'ubuntu-16.04'
        steps:
          - task: AzureWebAppContainer@1
            inputs:
              azureSubscription: 'revature(xyz)(eb8964dc-9fbc-4999-8360-6d5e23316e15)'
              appName: 'devopsdemo201909'
              containers: 'fredbelotte/devopsdemo'

trigger:
  branches:
    include:
      - master

variables:
  sonar: '5525c02dac30659cb0710672f763f1be743c7afe'